{
	"goals": [
		{
			"task": "Crea la puerta para salir del nivel",
			"code": "function createDoors(game) {\n\n\n\tif (!doors){\n\t\treturn;\n\t}\n\tlevel.map.createFromObjects('Object Layer 1', tiledId.doorDownId , 'items-sheet', 39 , true, false, this.doors);\n\tlevel.map.createFromObjects('Object Layer 1', tiledId.doorUpId , 'items-sheet', 40 , true, false, this.doors);\n\tdoors.forEach(\n\t\tfunction(door) { \n \t\t\t//Initialize\n\n\t\t});\n}\n",
			"target": "createDoors",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testCreateDoor(text)"
		},
		{
			"task": "Haz que el jugador se mueva hacia la izquierda",
			"code": "function move(){\n\n\tif (this.cursors.right.isDown) {\n\t\tthis.sprite.body.velocity.x = this.walkSpeed;\n\n\t\tif (this.sprite.body.onFloor() || this.sprite.body.touching.down){\n\t\t\tthis.sprite.play('player_animation_moveRight', 5, true);\n\t\t}\n\n\t\tif (this.direction == State.LOOKINGLEFT ) {\n\t\t\tthis.direction = State.LOOKINGRIGHT;\n\t\t}\n\t}\n\n\n\telse {\n\t\tif (this.direction == State.LOOKINGLEFT) {\n\t\t\tthis.sprite.play('player_animation_standUpLeft');\n\t\t}\n\t\telse if (this.direction == State.LOOKINGRIGHT) {\n\t\t\tthis.sprite.play('player_animation_standUpRight');\n\t\t}\n\t\tthis.sprite.body.velocity.x = 0;\n\t}\n}\n\n",
			"target": "player.move",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testMoveLeft(text)"
		},
		{
			"goal": "Haz que el jugador pueda saltar",
			"code": "function jump() {\n\n\tif (this.cursors.up.isDown && (this.sprite.body.onFloor() || this.sprite.body.touching.down) && this.game.time.now > this.jumpTimer) {\n\n\n\n\t\tthis.jumpTimer = this.game.time.now + 750;\n\t}\n}",
			"target": "player.jump",
			"range1": [0,0,2,99],
			"range2": [6,0,8,1],
			"test": "testJump(text)"
		},
		{
			"goal": "Haz que los enemigos se muevan para que caigan al agua",
			"code": "",
			"target": "",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testMoveEnemies(text)"
		},
		{
			"task": "Haz que el jugador pueda saltar sobre los enemigos",
			"code": "function upCollision(player, enemy) {\n\n\t this.die();\n}\n\n",
			"target": "player.upCollision",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testJumpOverEnemy(text)"
		},
		{
			"task": "Mostrar Score en el Hud",
			"code": "function createScore(){\n\n\t// Creamos el texto\n\n\t// Fijar el texto a la camara\n\n    \n}\n\n",
			"target": "hud.createScore",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testCreateScore(text)"
		},
		{
			"task": "Haz que el jugador pueda recoger monedas",
			"code": "function pickCoin(player, coin) {\n\n\t //Eliminar la moneda de la pantalla\n\n\t //Actualizar la puntuaci√≥n y el texto para mostrarlo  \n}\n\n",
			"target": "player.pickCoin",
			"range1": [0,0,0,0],
			"range2": [0,0,0,0],
			"test": "testPickCoins(text)"
		}
	]
}

